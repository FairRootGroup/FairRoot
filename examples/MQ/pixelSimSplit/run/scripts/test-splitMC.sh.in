#!/bin/bash

NOFNEEDEDAGENTS=5

source @DDS_LOCATION@/DDS_env.sh

echo "***** Start dds server"
dds-session start &> dds-server.dat

cat dds-server.dat
DDS_ID=$(cat dds-server.dat | grep "Default DDS session is set to" | awk '{print $NF}' )

echo "***** Create local cluster with $NOFNEEDEDAGENTS agents"
dds-submit -s $DDS_ID -r localhost -n $NOFNEEDEDAGENTS &> dds-agents.dat

#wait 5 seconds to start agents
COUNTER=0
LOOPING=1
until [ $LOOPING -eq 0 ]; do
    sleep 1;
    echo "waiting $COUNTER seconds to start $NOFNEEDEDAGENTS agents ";
    ((COUNTER++));
    if [ $COUNTER -ge 5 ]; then LOOPING=0; fi
    if dds-info -s $DDS_ID -n | grep -m 1 "$NOFNEEDEDAGENTS"; then LOOPING=0; fi
    : ;
done

echo "***** Print number of agents available"
NOFAGENTS=$(dds-info -s $DDS_ID -n)
echo $NOFAGENTS
if [ $NOFAGENTS -lt $NOFNEEDEDAGENTS ]; then
    echo "Not enough agents. Exiting"
    dds-server stop $DDS_ID
    exit
fi

echo "***** Activate topology"
dds-topology -s $DDS_ID --activate @SPLITMC_BIN_LOCATION@/test-splitMC.xml --disable-validation

#wait 20 seconds to finish jobs
COUNTER=0
LOOPING=1
until [ $LOOPING -eq 0 ]; do
    echo "waiting $COUNTER seconds for the output file to grow";
    ((COUNTER++));
    if [ $COUNTER -ge 50 ]; then LOOPING=0; fi
    FILESIZE=0
    if [ -f @SPLITMC_FILE_LOCATION@/DDS.simulation_TGeant3.data.$DDS_ID.root ]; then
        FILESIZE=$(ls -l @SPLITMC_FILE_LOCATION@/DDS.simulation_TGeant3.data.$DDS_ID.root | awk '{print $5}')
    fi
#    if [ $FILESIZE -ge 3000000 ]; then LOOPING=0; fi
    fairmq-dds-command-ui -s $DDS_ID -c c &> dds_check.log
    NOF_RUNNG=$(grep RUNNING dds_check.log | wc -l)
    NOF_READY=$(grep READY   dds_check.log | wc -l)
    NOF_AGENT=$(dds-info -s $DDS_ID -n | grep -m 1 "$NOFNEEDEDAGENTS")
    echo "GOT $NOF_RUNNG RUNNING, $NOF_READY READY ($NOF_AGENT AGENTS)"
    if [ $NOF_RUNNG -eq $((NOFNEEDEDAGENTS - 1)) ] && [ $NOF_READY -eq 1 ]
    then
	LOOPING=0;
    fi
    : ;
done

echo "check dds states again"
fairmq-dds-command-ui -s $DDS_ID -c c
echo "^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^"

fairmq-dds-command-ui -s $DDS_ID -c s
sleep 1
fairmq-dds-command-ui -s $DDS_ID -c t
sleep 1
fairmq-dds-command-ui -s $DDS_ID -c d
sleep 1
fairmq-dds-command-ui -s $DDS_ID -c q
sleep 1

echo "***** Stop DDS"
dds-session stop $DDS_ID -f

echo "***** Check the output file"
ls -ltrh @SPLITMC_FILE_LOCATION@/DDS.simulation_TGeant3.data.$DDS_ID.root
OUTPUT_EVENTS="$(echo "cout<<cbmsim->GetEntries()<<endl;" | root -l -b @SPLITMC_FILE_LOCATION@/DDS.simulation_TGeant3.data.$DDS_ID.root | tail -1)"
echo "There are $OUTPUT_EVENTS events in the output file."

if (( $OUTPUT_EVENTS == 100 ));
then
    echo "Shell script finished successfully.";
else
    echo "Shell script failed."
fi
