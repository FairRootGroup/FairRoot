#!/bin/bash

source @CMAKE_BINARY_DIR@/config.sh -p

NOFNEEDEDAGENTS=5

export LC_ALL=C
source @dds_location@/DDS_env.sh
echo "@dds_location@"
ls @dds_location@/bin/wn_bins/
cat @dds_location@/DDS_env.sh

echo "***** Start dds server"
dds-session start &> dds-ps-server.log

cat dds-ps-server.log
export DDS_SESSION_ID=$(cat dds-ps-server.log | grep "Default DDS session is set to" | awk '{print $NF}' )

if [ -z "$DDS_SESSION_ID" ]; then
    echo "DDS not started, quitting"
    exit
fi

echo "***** Create local cluster with $NOFNEEDEDAGENTS agents"
dds-submit -s $DDS_SESSION_ID -r localhost --slots $NOFNEEDEDAGENTS &> dds-ps-agents.log

#wait 5 seconds to start agents
COUNTER=0
LOOPING=1
until [ $LOOPING -eq 0 ]; do
    sleep 1;
    echo "waiting $COUNTER seconds to start $NOFNEEDEDAGENTS agents ";
    ((COUNTER++));
    if [ $COUNTER -ge 5 ]; then LOOPING=0; fi
    if dds-info -s $DDS_SESSION_ID -n | grep -m 1 "$NOFNEEDEDAGENTS"; then LOOPING=0; fi
    : ;
done

echo "***** Print number of agents available"
NOFAGENTS=$(dds-info -s $DDS_SESSION_ID -n)
echo $NOFAGENTS
if [ $NOFAGENTS -lt $NOFNEEDEDAGENTS ]; then
    echo "Not enough agents. Exiting"
    dds-session stop $DDS_SESSION_ID
    exit
fi

export FAIRMQ_DDS_TOPO_FILE=@pixel_bin_dir@/pixel-dds-simulation.xml
echo "***** Activate topology"
dds-topology -s $DDS_SESSION_ID --activate $FAIRMQ_DDS_TOPO_FILE --disable-validation

sleep 1

fairmq-dds-command-ui -w "IDLE"
fairmq-dds-command-ui -c i
fairmq-dds-command-ui -c k
fairmq-dds-command-ui -c b
fairmq-dds-command-ui -c x
fairmq-dds-command-ui -c j
fairmq-dds-command-ui -c r

samplers_string="main/SamplerGroup.*"
echo "waiting for $samplers_string to transition RUNNING->READY" 
fairmq-dds-command-ui -w "RUNNING->READY" -p $samplers_string
echo "...$samplers_string are READY, sending shutdown..."

sleep 2

echo "check dds states again"
fairmq-dds-command-ui -c c
echo "^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^"

fairmq-dds-command-ui -c s
sleep 1
fairmq-dds-command-ui -c t
sleep 1
fairmq-dds-command-ui -c d
sleep 1
fairmq-dds-command-ui -c q
sleep 1

echo "***** Stop DDS"
dds-session stop $DDS_SESSION_ID -f

echo "***** Check the output file"
ls -ltrh @pixel_file_dir@/DDS.simulation_TGeant3.data.$DDS_SESSION_ID.root
OUTPUT_EVENTS="$(echo "cout<<cbmsim->GetEntries()<<endl;" | root -l -b @pixel_file_dir@/DDS.simulation_TGeant3.data.$DDS_SESSION_ID.root | tail -1)"
echo "There are $OUTPUT_EVENTS events in the output file."

if (( $OUTPUT_EVENTS == $((NOFNEEDEDAGENTS - 2))*1000 ));
then
    echo "Shell script finished successfully.";
else
    echo "Shell script failed."
fi

