// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: payload.proto

#ifndef PROTOBUF_payload_2eproto__INCLUDED
#define PROTOBUF_payload_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace sampler {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_payload_2eproto();
void protobuf_AssignDesc_payload_2eproto();
void protobuf_ShutdownFile_payload_2eproto();

class Content;
class Payload;

// ===================================================================

class Content : public ::google::protobuf::Message {
 public:
  Content();
  virtual ~Content();

  Content(const Content& from);

  inline Content& operator=(const Content& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Content& default_instance();

  void Swap(Content* other);

  // implements Message ----------------------------------------------

  Content* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Content& from);
  void MergeFrom(const Content& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double a = 1;
  inline bool has_a() const;
  inline void clear_a();
  static const int kAFieldNumber = 1;
  inline double a() const;
  inline void set_a(double value);

  // optional double b = 2;
  inline bool has_b() const;
  inline void clear_b();
  static const int kBFieldNumber = 2;
  inline double b() const;
  inline void set_b(double value);

  // optional int32 x = 3;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 3;
  inline ::google::protobuf::int32 x() const;
  inline void set_x(::google::protobuf::int32 value);

  // optional int32 y = 4;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 4;
  inline ::google::protobuf::int32 y() const;
  inline void set_y(::google::protobuf::int32 value);

  // optional int32 z = 5;
  inline bool has_z() const;
  inline void clear_z();
  static const int kZFieldNumber = 5;
  inline ::google::protobuf::int32 z() const;
  inline void set_z(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:sampler.Content)
 private:
  inline void set_has_a();
  inline void clear_has_a();
  inline void set_has_b();
  inline void clear_has_b();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_z();
  inline void clear_has_z();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  double a_;
  double b_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  ::google::protobuf::int32 z_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_payload_2eproto();
  friend void protobuf_AssignDesc_payload_2eproto();
  friend void protobuf_ShutdownFile_payload_2eproto();

  void InitAsDefaultInstance();
  static Content* default_instance_;
};
// -------------------------------------------------------------------

class Payload : public ::google::protobuf::Message {
 public:
  Payload();
  virtual ~Payload();

  Payload(const Payload& from);

  inline Payload& operator=(const Payload& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Payload& default_instance();

  void Swap(Payload* other);

  // implements Message ----------------------------------------------

  Payload* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Payload& from);
  void MergeFrom(const Payload& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .sampler.Content data = 1;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::sampler::Content& data(int index) const;
  inline ::sampler::Content* mutable_data(int index);
  inline ::sampler::Content* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::sampler::Content >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::sampler::Content >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:sampler.Payload)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::sampler::Content > data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_payload_2eproto();
  friend void protobuf_AssignDesc_payload_2eproto();
  friend void protobuf_ShutdownFile_payload_2eproto();

  void InitAsDefaultInstance();
  static Payload* default_instance_;
};
// ===================================================================


// ===================================================================

// Content

// optional double a = 1;
inline bool Content::has_a() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Content::set_has_a() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Content::clear_has_a() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Content::clear_a() {
  a_ = 0;
  clear_has_a();
}
inline double Content::a() const {
  return a_;
}
inline void Content::set_a(double value) {
  set_has_a();
  a_ = value;
}

// optional double b = 2;
inline bool Content::has_b() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Content::set_has_b() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Content::clear_has_b() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Content::clear_b() {
  b_ = 0;
  clear_has_b();
}
inline double Content::b() const {
  return b_;
}
inline void Content::set_b(double value) {
  set_has_b();
  b_ = value;
}

// optional int32 x = 3;
inline bool Content::has_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Content::set_has_x() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Content::clear_has_x() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Content::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 Content::x() const {
  return x_;
}
inline void Content::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
}

// optional int32 y = 4;
inline bool Content::has_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Content::set_has_y() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Content::clear_has_y() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Content::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 Content::y() const {
  return y_;
}
inline void Content::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
}

// optional int32 z = 5;
inline bool Content::has_z() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Content::set_has_z() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Content::clear_has_z() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Content::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline ::google::protobuf::int32 Content::z() const {
  return z_;
}
inline void Content::set_z(::google::protobuf::int32 value) {
  set_has_z();
  z_ = value;
}

// -------------------------------------------------------------------

// Payload

// repeated .sampler.Content data = 1;
inline int Payload::data_size() const {
  return data_.size();
}
inline void Payload::clear_data() {
  data_.Clear();
}
inline const ::sampler::Content& Payload::data(int index) const {
  return data_.Get(index);
}
inline ::sampler::Content* Payload::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::sampler::Content* Payload::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::sampler::Content >&
Payload::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::sampler::Content >*
Payload::mutable_data() {
  return &data_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace sampler

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_payload_2eproto__INCLUDED
